|Traffic_controller_test
CLOCK_27 => CLOCK_27.IN1
CLOCK_50 => CLOCK_50.IN1
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
LEDG[0] << Traffic_Exam_Testbench:exam_test_bench.test_error
LEDG[1] << <GND>
LEDG[2] << <GND>
LEDG[3] << <GND>
LEDG[4] << <GND>
LEDG[5] << <GND>
LEDG[6] << <GND>
LEDG[7] << <GND>
LEDG[8] << Traffic_Exam_Testbench:exam_test_bench.clk_out
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
LEDR[10] << <GND>
LEDR[11] << <GND>
LEDR[12] << <GND>
LEDR[13] << <GND>
LEDR[14] << <GND>
LEDR[15] << <GND>
LEDR[16] << <GND>
LEDR[17] << <GND>
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
KEY[3] => KEY[3].IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => ~NO_FANOUT~
SW[11] => ~NO_FANOUT~
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => ~NO_FANOUT~
HEX0[0] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[1] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[2] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[3] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[4] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[5] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX0[6] << Traffic_Exam_Testbench:exam_test_bench.wb_w
HEX1[0] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[1] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[2] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[3] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[4] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[5] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX1[6] << Traffic_Exam_Testbench:exam_test_bench.wb_h
HEX2[0] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[1] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[2] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[3] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[4] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[5] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX2[6] << Traffic_Exam_Testbench:exam_test_bench.eb_w
HEX3[0] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[1] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[2] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[3] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[4] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[5] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX3[6] << Traffic_Exam_Testbench:exam_test_bench.eb_h
HEX4[0] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[1] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[2] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[3] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[4] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[5] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX4[6] << Traffic_Exam_Testbench:exam_test_bench.sb_w
HEX5[0] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[1] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[2] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[3] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[4] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[5] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX5[6] << Traffic_Exam_Testbench:exam_test_bench.sb_h
HEX6[0] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[1] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[2] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[3] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[4] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[5] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX6[6] << Traffic_Exam_Testbench:exam_test_bench.nb_w
HEX7[0] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[1] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[2] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[3] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[4] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[5] << Traffic_Exam_Testbench:exam_test_bench.nb_h
HEX7[6] << Traffic_Exam_Testbench:exam_test_bench.nb_h
LCD_BLON << Traffic_Exam_Testbench:exam_test_bench.LCD_BLON
LCD_DATA[0] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[1] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[2] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[3] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[4] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[5] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[6] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_DATA[7] <> Traffic_Exam_Testbench:exam_test_bench.LCD_DATA
LCD_EN << Traffic_Exam_Testbench:exam_test_bench.LCD_EN
LCD_ON << Traffic_Exam_Testbench:exam_test_bench.LCD_ON
LCD_RS << Traffic_Exam_Testbench:exam_test_bench.LCD_RS
LCD_RW << Traffic_Exam_Testbench:exam_test_bench.LCD_RW


|Traffic_controller_test|Traffic_Exam_Testbench:exam_test_bench
clk => ~NO_FANOUT~
CLOCK_50 => ~NO_FANOUT~
northbound_Hex[0] => ~NO_FANOUT~
northbound_Hex[1] => ~NO_FANOUT~
northbound_Hex[2] => ~NO_FANOUT~
northbound_Hex[3] => ~NO_FANOUT~
northbound_Hex[4] => ~NO_FANOUT~
northbound_Hex[5] => ~NO_FANOUT~
northbound_Hex[6] => ~NO_FANOUT~
north_walk_Hex[0] => ~NO_FANOUT~
north_walk_Hex[1] => ~NO_FANOUT~
north_walk_Hex[2] => ~NO_FANOUT~
north_walk_Hex[3] => ~NO_FANOUT~
north_walk_Hex[4] => ~NO_FANOUT~
north_walk_Hex[5] => ~NO_FANOUT~
north_walk_Hex[6] => ~NO_FANOUT~
southbound_Hex[0] => ~NO_FANOUT~
southbound_Hex[1] => ~NO_FANOUT~
southbound_Hex[2] => ~NO_FANOUT~
southbound_Hex[3] => ~NO_FANOUT~
southbound_Hex[4] => ~NO_FANOUT~
southbound_Hex[5] => ~NO_FANOUT~
southbound_Hex[6] => ~NO_FANOUT~
south_walk_Hex[0] => ~NO_FANOUT~
south_walk_Hex[1] => ~NO_FANOUT~
south_walk_Hex[2] => ~NO_FANOUT~
south_walk_Hex[3] => ~NO_FANOUT~
south_walk_Hex[4] => ~NO_FANOUT~
south_walk_Hex[5] => ~NO_FANOUT~
south_walk_Hex[6] => ~NO_FANOUT~
eastbound_Hex[0] => ~NO_FANOUT~
eastbound_Hex[1] => ~NO_FANOUT~
eastbound_Hex[2] => ~NO_FANOUT~
eastbound_Hex[3] => ~NO_FANOUT~
eastbound_Hex[4] => ~NO_FANOUT~
eastbound_Hex[5] => ~NO_FANOUT~
eastbound_Hex[6] => ~NO_FANOUT~
east_walk_Hex[0] => ~NO_FANOUT~
east_walk_Hex[1] => ~NO_FANOUT~
east_walk_Hex[2] => ~NO_FANOUT~
east_walk_Hex[3] => ~NO_FANOUT~
east_walk_Hex[4] => ~NO_FANOUT~
east_walk_Hex[5] => ~NO_FANOUT~
east_walk_Hex[6] => ~NO_FANOUT~
westbound_Hex[0] => ~NO_FANOUT~
westbound_Hex[1] => ~NO_FANOUT~
westbound_Hex[2] => ~NO_FANOUT~
westbound_Hex[3] => ~NO_FANOUT~
westbound_Hex[4] => ~NO_FANOUT~
westbound_Hex[5] => ~NO_FANOUT~
westbound_Hex[6] => ~NO_FANOUT~
west_walk_Hex[0] => ~NO_FANOUT~
west_walk_Hex[1] => ~NO_FANOUT~
west_walk_Hex[2] => ~NO_FANOUT~
west_walk_Hex[3] => ~NO_FANOUT~
west_walk_Hex[4] => ~NO_FANOUT~
west_walk_Hex[5] => ~NO_FANOUT~
west_walk_Hex[6] => ~NO_FANOUT~
disable_test => ~NO_FANOUT~
gold_module_toggel => ~NO_FANOUT~
walk_NS_request_in => ~NO_FANOUT~
walk_EW_request_in => ~NO_FANOUT~
left_turn_input => ~NO_FANOUT~
reset_in => ~NO_FANOUT~
reset <= <GND>
debug <= <GND>
left_turn_request <= <GND>
walk_NS_request <= <GND>
walk_EW_request <= <GND>
clock_to_your_module <= <GND>
nb_h[0] <= <GND>
nb_h[1] <= <GND>
nb_h[2] <= <GND>
nb_h[3] <= <GND>
nb_h[4] <= <GND>
nb_h[5] <= <GND>
nb_h[6] <= <GND>
nb_w[0] <= <GND>
nb_w[1] <= <GND>
nb_w[2] <= <GND>
nb_w[3] <= <GND>
nb_w[4] <= <GND>
nb_w[5] <= <GND>
nb_w[6] <= <GND>
sb_h[0] <= <GND>
sb_h[1] <= <GND>
sb_h[2] <= <GND>
sb_h[3] <= <GND>
sb_h[4] <= <GND>
sb_h[5] <= <GND>
sb_h[6] <= <GND>
sb_w[0] <= <GND>
sb_w[1] <= <GND>
sb_w[2] <= <GND>
sb_w[3] <= <GND>
sb_w[4] <= <GND>
sb_w[5] <= <GND>
sb_w[6] <= <GND>
eb_h[0] <= <GND>
eb_h[1] <= <GND>
eb_h[2] <= <GND>
eb_h[3] <= <GND>
eb_h[4] <= <GND>
eb_h[5] <= <GND>
eb_h[6] <= <GND>
eb_w[0] <= <GND>
eb_w[1] <= <GND>
eb_w[2] <= <GND>
eb_w[3] <= <GND>
eb_w[4] <= <GND>
eb_w[5] <= <GND>
eb_w[6] <= <GND>
wb_h[0] <= <GND>
wb_h[1] <= <GND>
wb_h[2] <= <GND>
wb_h[3] <= <GND>
wb_h[4] <= <GND>
wb_h[5] <= <GND>
wb_h[6] <= <GND>
wb_w[0] <= <GND>
wb_w[1] <= <GND>
wb_w[2] <= <GND>
wb_w[3] <= <GND>
wb_w[4] <= <GND>
wb_w[5] <= <GND>
wb_w[6] <= <GND>
clk_out <= <GND>
test_error <= <GND>
LCD_BLON <= <GND>
LCD_DATA[0] <> <UNC>
LCD_DATA[1] <> <UNC>
LCD_DATA[2] <> <UNC>
LCD_DATA[3] <> <UNC>
LCD_DATA[4] <> <UNC>
LCD_DATA[5] <> <UNC>
LCD_DATA[6] <> <UNC>
LCD_DATA[7] <> <UNC>
LCD_EN <= <GND>
LCD_ON <= <GND>
LCD_RS <= <GND>
LCD_RW <= <GND>


|Traffic_controller_test|traffic_light_controller:myTLC
clk_27 => clk.CLK
clk_27 => clock_divider_counter[0].CLK
clk_27 => clock_divider_counter[1].CLK
clk_27 => clock_divider_counter[2].CLK
clk_27 => clock_divider_counter[3].CLK
clk_27 => clock_divider_counter[4].CLK
clk_27 => clock_divider_counter[5].CLK
clk_27 => clock_divider_counter[6].CLK
clk_27 => clock_divider_counter[7].CLK
clk_27 => clock_divider_counter[8].CLK
clk_27 => clock_divider_counter[9].CLK
clk_27 => clock_divider_counter[10].CLK
clk_27 => clock_divider_counter[11].CLK
clk_27 => clock_divider_counter[12].CLK
clk_27 => clock_divider_counter[13].CLK
clk_27 => clock_divider_counter[14].CLK
clk_27 => clock_divider_counter[15].CLK
clk_27 => clock_divider_counter[16].CLK
clk_27 => clock_divider_counter[17].CLK
clk_27 => clock_divider_counter[18].CLK
clk_27 => clock_divider_counter[19].CLK
clk_27 => clock_divider_counter[20].CLK
clk_27 => clock_divider_counter[21].CLK
clk_27 => clock_divider_counter[22].CLK
clk_27 => clock_divider_counter[23].CLK
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
debug => clock_divider_counter.DATAB
reset => walk_request.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => clock_divider_counter.OUTPUTSELECT
reset => timer[0].ACLR
reset => timer[1].ACLR
reset => timer[2].PRESET
reset => timer[3].PRESET
reset => timer[4].PRESET
reset => timer[5].PRESET
reset => state_1.PRESET
reset => state_1a.ACLR
reset => state_1w.ACLR
reset => state_1fd.ACLR
reset => state_1d.ACLR
reset => state_2.ACLR
reset => state_3.ACLR
reset => state_4.ACLR
reset => state_4a.ACLR
reset => state_4w.ACLR
reset => state_4fd.ACLR
reset => state_4d.ACLR
reset => state_5.ACLR
reset => state_6.ACLR
left_turn_request => left_turn_request_d.IN1
walk_request_NS => always75.IN0
walk_request_EW => always75.IN1
northbound_red <= always61.DB_MAX_OUTPUT_PORT_TYPE
northbound_amber <= state_5.DB_MAX_OUTPUT_PORT_TYPE
northbound_green <= always63.DB_MAX_OUTPUT_PORT_TYPE
southbound_red <= always61.DB_MAX_OUTPUT_PORT_TYPE
southbound_amber <= always65.DB_MAX_OUTPUT_PORT_TYPE
southbound_green <= always63.DB_MAX_OUTPUT_PORT_TYPE
eastbound_red <= always68.DB_MAX_OUTPUT_PORT_TYPE
eastbound_amber <= state_2.DB_MAX_OUTPUT_PORT_TYPE
eastbound_green <= always70.DB_MAX_OUTPUT_PORT_TYPE
westbound_red <= always71.DB_MAX_OUTPUT_PORT_TYPE
westbound_amber <= always72.DB_MAX_OUTPUT_PORT_TYPE
westbound_green <= always70.DB_MAX_OUTPUT_PORT_TYPE
southbound_left_turn[0] <= state_4a.DB_MAX_OUTPUT_PORT_TYPE
southbound_left_turn[1] <= state_4a.DB_MAX_OUTPUT_PORT_TYPE
westbound_left_turn[0] <= state_1a.DB_MAX_OUTPUT_PORT_TYPE
westbound_left_turn[1] <= state_1a.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[0] <= northbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[1] <= northbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[2] <= northbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[3] <= northbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[4] <= northbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
northbound_walk_light[5] <= state_4w.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[0] <= southbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[1] <= southbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[2] <= southbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[3] <= southbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[4] <= southbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
southbound_walk_light[5] <= state_4w.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[0] <= eastbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[1] <= eastbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[2] <= eastbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[3] <= eastbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[4] <= eastbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
eastbound_walk_light[5] <= state_1w.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[0] <= westbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[1] <= westbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[2] <= westbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[3] <= westbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[4] <= westbound_walk_light.DB_MAX_OUTPUT_PORT_TYPE
westbound_walk_light[5] <= state_1w.DB_MAX_OUTPUT_PORT_TYPE


